@model TechShop.Models.Order

@{
    ViewData["Title"] = "Chi tiết đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

<style>
    .order-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 20px;
    }

    .order-detail {
        display: flex;
        align-items: center;
        padding: 10px 0;
    }

    .order-detail img {
        width: 60px;
        height: 60px;
        object-fit: cover;
        margin-right: 10px;
        border-radius: 5px;
        transition: transform 0.2s;
    }

    .order-detail img:hover {
        transform: scale(1.05);
    }

    .status-chua-thanh-toan {
        color: #ff9800;
    }

    .status-da-thanh-toan {
        color: #4caf50;
    }

    .status-dang-giao {
        color: #2196f3;
    }

    .status-da-giao {
        color: #2e7d32;
    }

    .status-huy {
        color: #f44336;
    }

    .disabled-section {
        opacity: 0.5;
        pointer-events: none;
    }
</style>

<div class="container-fluid">
    <h2 class="mb-4">Chi tiết đơn hàng</h2>

    <div class="card">
        <div class="card-body">
            <div class="order-container">
                <p><strong>Mã đơn hàng:</strong> @Model.OrderId</p>
                <p><strong>Mã tài khoản:</strong> @Model.UserId</p>
                <p><strong>Ngày đặt hàng:</strong> @Model.OrderDate.ToString("dd/MM/yyyy HH:mm")</p>
                <p><strong>Trạng thái:</strong> <span id="status-display" class="@GetStatusClass(Model.Status)">@GetStatusText(Model.Status)</span></p>
                <div id="update-status-section" class="@(Model.Status == "Delivered" || Model.Status == "Cancelled" ? "disabled-section" : "")">
                    <label for="status-select">Cập nhật trạng thái:</label>
                    <select id="status-select" class="form-select d-inline w-auto" @(Model.Status == "Delivered" || Model.Status == "Cancelled" ? "disabled" : "")>
                        <option value="Pending" selected="@(Model.Status == "Pending")">@GetStatusText("Pending")</option>
                        <option value="Confirmed" selected="@(Model.Status == "Confirmed")">@GetStatusText("Confirmed")</option>
                        <option value="Shipped" selected="@(Model.Status == "Shipped")">@GetStatusText("Shipped")</option>
                        <option value="Delivered" selected="@(Model.Status == "Delivered")">@GetStatusText("Delivered")</option>
                        <option value="Cancelled" selected="@(Model.Status == "Cancelled")">@GetStatusText("Cancelled")</option>
                    </select>
                    <button id="update-status-btn" class="btn btn-primary btn-sm" @(Model.Status == "Delivered" || Model.Status == "Cancelled" ? "disabled" : "")>Cập nhật</button>
                </div>
                <h4>Chi tiết sản phẩm</h4>
                @foreach (var detail in Model.OrderDetails)
                {
                    <div class="order-detail">
                        @{
                            string imageUrl = detail.ImageUrl ?? "default.jpg";
                            if (!string.IsNullOrEmpty(imageUrl) && imageUrl.StartsWith("/images/"))
                            {
                                imageUrl = imageUrl.Replace("/images/", "");
                            }
                            string fullImagePath = string.IsNullOrEmpty(imageUrl) ? "/images/default.jpg" : $"/images/{imageUrl}";
                        }
                        <img src="@fullImagePath" alt="@detail.ProductName" loading="lazy" />
                        <div>
                            <p><strong>@detail.ProductName</strong></p>
                            <p>Số lượng: @detail.Quantity | Giá: @detail.Price.ToString("N0") VNĐ</p>
                            <p>Tổng: @((detail.Price * detail.Quantity).ToString("N0")) VNĐ</p>
                        </div>
                    </div>
                }
                <p><strong>Tổng tiền:</strong> @Model.TotalAmount.ToString("N0") VNĐ</p>
                <a href="@Url.Action("Index", "AdminOrder")" class="btn btn-secondary">Quay lại</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#update-status-btn").click(function () {
                var newStatus = $("#status-select").val();
                var orderId = "@Model.OrderId";

                $.ajax({
                    url: '@Url.Action("UpdateStatus", "AdminOrder")',
                    type: 'POST',
                    data: { id: orderId, status: newStatus },
                    success: function (result) {
                        if (result.success) {
                            $("#status-display").text(GetStatusText(newStatus));
                            $("#status-display").attr("class", GetStatusClass(newStatus));
                            toastr.success("Cập nhật trạng thái thành công!");
                        } else {
                            toastr.error("Có lỗi xảy ra khi cập nhật trạng thái!");
                        }
                    },
                    error: function () {
                        toastr.error("Có lỗi xảy ra khi cập nhật trạng thái!");
                    }
                });
            });
        });

        function GetStatusClass(status) {
            const statusMap = {
                "Pending": "status-chua-thanh-toan",
                "Confirmed": "status-da-thanh-toan",
                "Shipped": "status-dang-giao",
                "Delivered": "status-da-giao",
                "Cancelled": "status-huy"
            };
            return statusMap[status] || "";
        }

        function GetStatusText(status) {
            const statusMap = {
                "Pending": "Chưa thanh toán",
                "Confirmed": "Đã thanh toán",
                "Shipped": "Đang giao",
                "Delivered": "Đã giao",
                "Cancelled": "Hủy"
            };
            return statusMap[status] || status;
        }
    </script>
}

@functions {
    public string GetStatusText(string status)
    {
        return status switch
        {
            "Pending" => "Chưa thanh toán",
            "Confirmed" => "Đã thanh toán",
            "Shipped" => "Đang giao",
            "Delivered" => "Đã giao",
            "Cancelled" => "Hủy",
            _ => status
        };
    }

    public string GetStatusClass(string status)
    {
        return status switch
        {
            "Pending" => "status-chua-thanh-toan",
            "Confirmed" => "status-da-thanh-toan",
            "Shipped" => "status-dang-giao",
            "Delivered" => "status-da-giao",
            "Cancelled" => "status-huy",
            _ => ""
        };
    }
}